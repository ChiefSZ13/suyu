
# SPDX-FileCopyrightText: 2022 yuzu Emulator Project
# SPDX-License-Identifier: GPL-3.0-or-later

name: 'build dev'

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
env:
  PR_NUMBER: pr${{ github.event.number }}

jobs:
  build-msvc:
    name: 'test build (windows, msvc)'
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: ~/.buildcache
          key: ${{ runner.os }}-msvc-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-msvc-
      - name: Install dependencies
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $BuildCacheVer = "v0.28.4"
          $File = "buildcache-windows.zip"
          $Uri = "https://github.com/mbitsnbites/buildcache/releases/download/$BuildCacheVer/$File"
          $WebClient = New-Object System.Net.WebClient
          $WebClient.DownloadFile($Uri, $File)
          7z x $File
          $CurrentDir = Convert-Path .
          echo "$CurrentDir/buildcache/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Install Vulkan SDK
        shell: pwsh
        run: .\.ci\scripts\windows\install-vulkan-sdk.ps1
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Configure
        env:
          CC: cl.exe
          CXX: cl.exe
        run: |
          glslangValidator --version
          mkdir build
          cmake . -B build -GNinja -DCMAKE_TOOLCHAIN_FILE="CMakeModules/MSVCCache.cmake" -DUSE_CCACHE=ON -DSUYU_USE_BUNDLED_QT=1 -DSUYU_USE_BUNDLED_SDL2=1 -DSUYU_USE_QT_WEB_ENGINE=ON -DENABLE_COMPATIBILITY_LIST_DOWNLOAD=ON -DSUYU_ENABLE_COMPATIBILITY_REPORTING=ON -DUSE_DISCORD_PRESENCE=ON -DENABLE_QT_TRANSLATION=ON -DCMAKE_BUILD_TYPE=Release -DGIT_BRANCH=dev -DSUYU_CRASH_DUMPS=ON
      - name: Build
        run: cmake --build build
      - name: Cache Summary
        run: buildcache -s
      - name: Pack
        shell: pwsh
        run: .\.ci\scripts\windows\upload.ps1
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: suyu-windows-build
          path: artifacts/
  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.ccache
          key: ${{ runner.os }}-android-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-android-
      - name: Query tag name
        uses: olegtarasov/get-tag@v2.1.2
        id: tagName
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache apksigner glslang-dev glslang-tools
      - name: Build
        run: ./.ci/scripts/android/build.sh
      - name: Copy and sign artifacts
        env:
          ANDROID_KEYSTORE_B64: ${{ secrets.ANDROID_KEYSTORE_B64 }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEYSTORE_PASS: ${{ secrets.ANDROID_KEYSTORE_PASS }}
        run: ./.ci/scripts/android/upload.sh
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: suyu-android-build
          path: artifacts/
